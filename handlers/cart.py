from aiogram import Router
from aiogram.types import Message
from aiogram.filters import Command
from services.cart_service import get_cart, clear_cart, calculate_total
from services.user_service import get_user_balance, update_user_balance

router = Router()

@router.message(Command("cart"))
async def view_cart(message: Message):
    items = get_cart(message.from_user.id)
    if not items:
        return await message.answer("üß∫ –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.")
    
    text = "üß∫ <b>–í–∞—à –∫–æ—à–∏–∫:</b>\n"
    for item in items:
        p = item["product"]
        q = item["quantity"]
        text += f"- {p['brand']} {p['model']} x{q} = <b>{p['price'] * q} –≥—Ä–Ω</b>\n"
    total = calculate_total(items)
    text += f"\nüí∞ –í—Å—å–æ–≥–æ: <b>{total} –≥—Ä–Ω</b>\n\n–ù–∞–ø–∏—à–∏ /checkout —â–æ–± –æ—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è."
    await message.answer(text)

@router.message(Command("clearcart"))
async def clear_cart_cmd(message: Message):
    clear_cart(message.from_user.id)
    await message.answer("üßπ –ö–æ—à–∏–∫ –æ—á–∏—â–µ–Ω–æ.")

@router.message(Command("checkout"))
async def checkout_cmd(message: Message):
    user_id = message.from_user.id
    items = get_cart(user_id)
    if not items:
        return await message.answer("üß∫ –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.")
    
    total = calculate_total(items)
    balance = get_user_balance(user_id)

    if balance is None:
        return await message.answer("‚ö†Ô∏è –°–ø–æ—á–∞—Ç–∫—É –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—è: /register")

    if balance < total:
        return await message.answer(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤. –í–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ <b>{total - balance:.2f} –≥—Ä–Ω</b>.\n–ü–æ–ø–æ–≤–Ω—ñ—Ç—å –±–∞–ª–∞–Ω—Å: /topup")
    
    update_user_balance(user_id, -total)
    clear_cart(user_id)
    await message.answer(f"‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ!\nüí∏ –ó –≤–∞—Å —Å–ø–∏—Å–∞–Ω–æ <b>{total} –≥—Ä–Ω</b>.")
