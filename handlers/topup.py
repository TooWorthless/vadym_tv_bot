from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import Command

from payments.liqpay_mock import MockLiqPay
from services.user_service import update_user_balance

router = Router()

@router.message(Command("topup"))
async def topup_menu(message: Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="50 –≥—Ä–Ω"), KeyboardButton(text="100 –≥—Ä–Ω")],
            [KeyboardButton(text="200 –≥—Ä–Ω"), KeyboardButton(text="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")]
        ],
        resize_keyboard=True,
        input_field_placeholder="–ê–±–æ –≤–≤–µ–¥—ñ—Ç—å —Å—É–º—É –≤—Ä—É—á–Ω—É, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 300"
    )
    await message.answer("üí∏ –í–∏–±–µ—Ä—ñ—Ç—å –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è:", reply_markup=kb)

@router.message(F.text.regexp(r"^\d{1,6}$"))  # –°—É–º–∞ —á–∏—Å–ª–æ–º (–¥–æ 999999 –≥—Ä–Ω)
async def process_custom_amount(message: Message):
    amount = int(message.text)
    if amount < 1:
        return await message.answer("‚ö†Ô∏è –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è ‚Äî 1 –≥—Ä–Ω")

    payment_url = MockLiqPay.create_payment(message.from_user.id, amount)
    await message.answer(f"üîó –ú–æ–∫–æ–≤–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –æ–ø–ª–∞—Ç–∏:\n{payment_url}")
    await message.answer("‚è≥ –û–±—Ä–æ–±–∫–∞ –ø–ª–∞—Ç–µ–∂—É...")

    status = MockLiqPay.check_payment_status()
    if status == "success":
        update_user_balance(message.from_user.id, amount)
        await message.answer(f"‚úÖ –ë–∞–ª–∞–Ω—Å –ø–æ–ø–æ–≤–Ω–µ–Ω–æ –Ω–∞ <b>{amount} –≥—Ä–Ω</b>", reply_markup=ReplyKeyboardRemove())
    else:
        await message.answer("‚ùå –ü–ª–∞—Ç—ñ–∂ –Ω–µ –ø—Ä–æ–π—à–æ–≤. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.", reply_markup=ReplyKeyboardRemove())

@router.message(F.text.in_(["50 –≥—Ä–Ω", "100 –≥—Ä–Ω", "200 –≥—Ä–Ω"]))
async def process_fixed_amount(message: Message):
    amount = int(message.text.replace(" –≥—Ä–Ω", ""))
    await process_custom_amount(message)

@router.message(F.text == "‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏")
async def cancel_topup(message: Message):
    await message.answer("‚ùå –ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.", reply_markup=ReplyKeyboardRemove())
